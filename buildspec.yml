version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
      python: 3.13
    commands:
      - echo "Installing global dependencies..."
      - npm install -g aws-cdk
      - pip install --upgrade awscli
      - npm install -g aws-amplify-cli  # Install Amplify CLI for manual deployment

  pre_build:
    commands:
      - echo "Starting backend deployment..."
      - cd backend
      - npm install
      - npm run build
      - echo "Bootstrapping CDK..."
      - cdk bootstrap --require-approval never

  build:
    commands:
      # Deploy backend
      - echo "Deploying CDK stack..."
      - cdk deploy ForestClassificationStack --require-approval never --parameters BucketName="$BUCKET_NAME" --parameters AssetsBucketName="$ASSETS_BUCKET" --parameters GeeCredentialsFile="$GEE_CREDENTIALS_FILE"
      
      # Get Lambda URL for frontend
      - LAMBDA_URL=$(aws cloudformation describe-stacks --stack-name ForestClassificationStack --query 'Stacks[0].Outputs[?OutputKey==`LambdaFunctionUrl`].OutputValue' --output text)
      - cd ..
      
      # Deploy frontend
      - echo "Building frontend..."
      - cd Frontend
      - echo "REACT_APP_API_URL=$LAMBDA_URL" > .env
      - npm install
      - npm run build
      
      # Create Amplify app without GitHub
      - echo "Creating/updating Amplify app..."
      - |
        AMPLIFY_APP_ID=$(aws amplify create-app --name "${PROJECT_NAME}-frontend" --platform WEB --query 'app.appId' --output text || echo "")
        if [ -z "$AMPLIFY_APP_ID" ]; then
          AMPLIFY_APP_ID=$(aws amplify list-apps --query "apps[?name=='${PROJECT_NAME}-frontend'].appId" --output text)
        fi
        if [ -z "$AMPLIFY_APP_ID" ]; then
          echo "Error: Could not obtain AMPLIFY_APP_ID"
          exit 1
        fi
        echo "AMPLIFY_APP_ID=$AMPLIFY_APP_ID"

            # Create main branch if it doesn't exist
      - echo "Creating main branch..."
      - aws amplify create-branch --app-id "$AMPLIFY_APP_ID" --branch-name main || echo "Branch already exists"
      
      # Create build.zip
      - echo "Creating build.zip..."
      - cd build
      - zip -r ../build.zip .
      - cd ..
      
      # Start Amplify deployment and upload build.zip
      - echo "Starting Amplify deployment..."
      - |
        # Initiate deployment and get presigned URL
        DEPLOYMENT_DATA=$(aws amplify start-deployment --app-id "$AMPLIFY_APP_ID" --branch-name main --query '{jobId: jobId, zipUploadUrl: zipUploadUrl}' --output json)
        JOB_ID=$(echo "$DEPLOYMENT_DATA" | jq -r '.jobId')
        ZIP_UPLOAD_URL=$(echo "$DEPLOYMENT_DATA" | jq -r '.zipUploadUrl')
        if [ -z "$ZIP_UPLOAD_URL" ]; then
          echo "Error: Could not obtain zipUploadUrl"
          exit 1
        fi
        # Upload build.zip to presigned URL
        curl -f --upload-file build.zip "$ZIP_UPLOAD_URL" || { echo "Failed to upload build.zip"; exit 1; }
      
      # Create and deploy frontend build
      - cd build
      - zip -r ../build.zip .
      - cd ..
      - aws amplify start-deployment --app-id "$AMPLIFY_APP_ID" --branch-name main --source-url build.zip
      - cd ..

  post_build:
    commands:
      - echo "Deployment complete!"
      - echo "Backend Lambda URL:$LAMBDA_URL"
      - echo "Frontend will be available at:https://${AMPLIFY_APP_ID}.amplifyapp.com"

artifacts:
  files:
    - backend/cdk.out/**/*
    - Frontend/build/**/*
  base-directory: '.'